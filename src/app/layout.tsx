// src/app/layout.tsx
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import { CartProvider } from "@/context/CartContext";
import { CurrencyProvider } from "@/context/CurrencyContext"; // <-- Import this!
import React from 'react';
import Navbar from '@/components/Navbar';
import Footer from '@/components/Footer';

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// Define the global variables explicitly for the client-side
declare global {
  var __firebase_config: string | undefined;
  var __initial_auth_token: string | undefined;
  var __app_id: string | undefined;
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Load Firebase config from environment variables
  const firebaseConfig = {
    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
    measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,
  };

  // Convert to JSON string for passing
  const firebaseConfigString = JSON.stringify(firebaseConfig);
  const initialAuthToken = process.env.NEXT_PUBLIC_FIREBASE_AUTH_TOKEN || undefined;
  const appId = process.env.NEXT_PUBLIC_FIREBASE_APP_ID || 'development-app-id';

  // Debug: log firebase config on the server (will not show in browser)
  // console.log("Firebase config passed to CartProvider:", firebaseConfig);

  return (
    <html lang="en">
      <body className={inter.className}>
        <CartProvider
          firebaseConfig={firebaseConfigString}
          initialAuthToken={initialAuthToken}
          appId={appId}
        >
          <CurrencyProvider>
            <Navbar />
            {children}
            <Footer />
          </CurrencyProvider>
        </CartProvider>
      </body>
    </html>
  );
}